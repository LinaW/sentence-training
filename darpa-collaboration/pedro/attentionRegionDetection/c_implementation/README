%======================================================================
1. Some Notes
Since it is implemented in C/C++, the coordinates in roi_box_t ranges in [0, image height-1] and [0, image width-1]
The implemented functions are declared and defined with 
	extern "C"
So when this c++ code compiled, it will follow the c compilation rule. And then can be called by other c code with 
using extern "C".

Input parameter values (Suggested by Yuewei Lin):
	 target_threshold	0.15
	 background_threshold	0.08
	 target_area_ratio_threshold	0.005
	 background_area_ratio_threshold	0.35

The function 'video_roi' returns 
	struct roi_box_t ** boxes
If there is no FoA boxes in a certain frame, e.g. at i-th frame, then boxes[i] = NULL; 

%======================================================================
2. A test.c example

#include "video_roi.h"
#include "cv.h"
#include "Imlib2.h"
#include "roi_box_t.h"
#include <stdlib.h>
#include <stdio.h>

void outputRoiBoxes(struct roi_box_t ** boxes, int length){
	struct roi_box_t * box;
	unsigned int i;
	for (i=0; i<length; ++i){
		printf("frame-%d\n", i+1);
		if (boxes[i] != NULL){
			box = boxes[i];
			while (box != NULL){
				printf("%f %f %f %f ", box->x1, box->y1, box->x2, box->y2);				
				box = box->next;
			}
			printf("\n");
		}
		else{
			printf("0 0 0 0\n");
		}
	}
}


int main(){
	int numOfImages = 1000;
	char imgfilename[1024];
	Imlib_Image images[1000];
	struct roi_box_t ** boxes;

	unsigned int i;

	printf("Reading in imlib_images\n\n");
	
	for (i=0; i<numOfImages; ++i){
		sprintf(imgfilename, "/home/raincol/research/darpa_tracking/yuewei/c_FoA/data/realFrame-%05d.ppm", i+1);
		images[i] = imlib_load_image(imgfilename);
	}


	// compute FoA regions
	printf("running video_roi...\n\n");

	boxes = video_roi(images, numOfImages,
			  0.15, 0.08,
			  0.005, 0.35);

	// output boxes
	printf("output roi_boxes\n\n");
	outputRoiBoxes(boxes, numOfImages);

	// delete FoA regions
	printf("deleting video ROIs\n\n");
	deleteVideoROI(boxes, numOfImages);

	return 0;
}

%======================================================================
3. makefile example

OPENCV_INCLUDE_PATH = -I/usr/local/include/opencv -I/usr/local/include/opencv2/core -I/usr/local/include/opencv2/calib3d -I/usr/local/include/opencv2/flann -I/usr/local/include/opencv2/legacy -I/usr/local/include/opencv2/objdetect -I/usr/local/include/opencv2/ts -I/usr/local/include/opencv2/contrib -I/usr/local/include/opencv2/features2d -I/usr/local/include/opencv2/gpu -I/usr/local/include/opencv2/imgproc -I/usr/local/include/opencv2/ml -I/usr/local/include/opencv2/video

OPENCV_LIBRARY_PATH = -L/usr/local/lib

OPENCV_LIBRARIES = -lopencv_core -lopencv_ml -lopencv_imgproc -lopencv_highgui -lopencv_calib3d -lopencv_features2d -lopencv_flann -lopencv_gpu -lopencv_legacy -lopencv_objdetect -lopencv_ts -lopencv_video

IMLIB2_INCLUDE_PATH = -I/home/raincol/installed/lib/imlib2-1.4.5/include

IMLIB2_LIBRARY_PATH = -L/home/raincol/installed/lib/imlib2-1.4.5/lib -L/home/raincol/installed/lib/imlib2-1.4.5/lib/imlib2/filters -L/home/raincol/installed/lib/imlib2-1.4.5/lib/imlib2/loaders

IMLIB2_LIBRARIES = -lImlib2

test:test.o video_roi.o bwlabel.o
	gcc -lstdc++ -O2 -o test test.o video_roi.o bwlabel.o $(OPENCV_INCLUDE_PATH) $(OPENCV_LIBRARY_PATH) $(OPENCV_LIBRARIES) $(IMLIB2_LIBRARY_PATH) $(IMLIB2_LIBRARIES) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_LIBRARIES) -lm

test.o:test.c
	gcc -O2 -c test.c $(OPENCV_INCLUDE_PATH) $(OPENCV_LIBRARY_PATH) $(OPENCV_LIBRARIES) $(IMLIB2_LIBRARY_PATH) $(IMLIB2_LIBRARIES) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_LIBRARIES)

video_roi.o:video_roi.h video_roi.cpp roi_box_t.h bwlabel.h
	g++ -DDCPLUSPLUS -O2 -c video_roi.cpp $(OPENCV_INCLUDE_PATH) $(OPENCV_LIBRARY_PATH) $(OPENCV_LIBRARIES) $(IMLIB2_LIBRARY_PATH) $(IMLIB2_LIBRARIES) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_LIBRARIES) -lm

bwlabel.o:bwlabel.cpp bwlabel.h
	g++ -O2 -c bwlabel.cpp $(OPENCV_INCLUDE_PATH) $(OPENCV_LIBRARY_PATH) $(OPENCV_LIBRARIES) $(IMLIB2_LIBRARY_PATH) $(IMLIB2_LIBRARIES) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_INCLUDE_PATH) $(IMLIB2_LIBRARIES)


clean:
	rm -rf test *.o

%=========================================================================
